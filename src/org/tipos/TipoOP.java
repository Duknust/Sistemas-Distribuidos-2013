package org.tipos;

import java.io.Serializable;

public enum TipoOP implements Serializable {

    NULL, REQRETRY, REQREGISTO, REPREGISTO, REQPROJ, REPPROJ, REQMAPPROJ, REPMAPPROJ, REPNOMEPROJ, REQNOMEPROJ, ADDPROJECTO, ACTPROJECTO, REQLOGIN, REPLOGIN, REQADDEUROS, REPADDEUROS, UNLOCK, LOCK, NOTIFEUROS

}
/*
 NULL - VAZIO
 REQREGISTO - ENVIA USER E PASS _ CLIENTE -> SERVER
 REPREGISTO - ENVIA RESPOSTA _ SERVER -> CLIENTE
 REQPROJ - ENVIA UM PROJECTO PARA CRIAR _ CLIENTE -> SERVER
 REPPROJ - SE CRIOU OU NÃO _ SERVER -> CLIENTE
 REQRETRY - ENVIA USERNAME APOS PERDA DE LIGACAO ESTANDO JA LOGADO _ CLIENTE -> SERVER
 ADDPROJECTO - ENVIA UM PROJECTO CRIADO PARA ADICIONAR À LISTA _ CLIENTE -> SERVER | SERVER -> CLIENTE
 ACTPROJECTO - ENVIA UM PROJECTO ALTERADO PARA MUDAR NA LISTA _ SERVER -> CLIENTE
 REQMAPPROJ - PEDE A LISTA DE PROJECTOS INTEIRA _ CLIENTE -> SERVER
 REPMAPPROJ - RECEBE A LISTA DE PROJECTOS INTEIRA _ SERVER -> CLIENTE
 REQLOGIN - ENVIA DADOS DE LOGIN PARA VERIFICAR _ CLIENTE -> SERVER
 REPLOGIN - ENVIA BOOLEAN SE O LOGIN ESTA CORRECTO _ SERVER -> CLIENTE
 REQADDEUROS - ENVIA DADOS SOBRE PROJECTO A SER FINANCIADO _ CLIENTE -> SERVER
 REPADDEUROS - ENVIA SE CONSEGUIU ADICONAR _ SERVER -> CLIENTE
 UNLOCK - ENVIA PEDIDO PARA DESBLOQUEAR (ex:quando está bloqueado pelo proj activo) _ SERVER -> CLIENTE
 LOCK - ENVIA PEDIDO PARA BLOQUEAR ATE RECEBER UM UNLOCK _ SERVER -> CLIENTE
 REQNOMEPROJ - PERGUNTA SE JA EXISTE O NOME DO PROJECTO _ CLIENTE -> SERVER
 REPNOMEPROJ - RESPOSTA COM 1 ou 0 NO INTEIRO1 _ SERVER -> CLIENTE
 NOTIFEUROS - NOTIFICA O CRIADOR QUE O SEU PROJECTO RECEBEU DINHEIRO _ SERVER -> CLIENTE
 */
